name: Deploy Quarto Project to GitHub Pages

on:
  workflow_dispatch: # Allows manual triggering from the Actions tab
  push:
    branches:
      - main # Triggers the workflow on pushes to the main branch

permissions:
  contents: read # Read permission for checkout
  pages: write # Permission to write to GitHub Pages
  id-token: write # Permission for OIDC token authentication

concurrency:
  group: "pages" # Group deployments to avoid conflicts
  cancel-in-progress: false # Do not cancel ongoing deployments

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Optionally add caching for R packages and renv
    env:
      RENV_PATHS_CACHE: ~/.local/share/renv # Define cache path for renv
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Checks out your repository code

      # --- Added R Setup Steps ---
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release' # Or specify a specific R version

      - name: Set up R package cache
        uses: actions/cache@v4
        with:
          path: ${{ env.RENV_PATHS_CACHE }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: Restore R packages from renv
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()
      # --- End Added R Setup Steps ---

      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: pre-release # Or specify a specific Quarto version

      - name: Build Quarto Project
        shell: bash
        run: |
          # Ensure _quarto.yml exists; create if not (optional, good practice)
          # [ ! -f _quarto.yml ] && echo -e "project:\n  output-dir: _site" > _quarto.yml
          # Render the project (assuming output to default '_site' or specified in _quarto.yml)
          quarto render
          # If your _quarto.yml specifies a different output-dir, ensure it matches the 'path' in the upload step

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5 # Configures Pages based on repository settings

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the directory containing the rendered site
          path: "_site" # Default Quarto output directory for websites

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Deploys the uploaded artifact to Pages
